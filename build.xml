<?xml version="1.0" encoding="utf-8"?>
<project name="nModule" default="open-targets">

  <property environment="env" />

  <condition property="msbuild.verbosity" else="minimal">
    <isset property="msbuild.verbosity" />
  </condition>

  <condition property="msbuild.warninglevel" else="4">
    <isset property="msbuild.warninglevel" />
  </condition>

  <condition property="msbuild.targets" else="Clean;Build">
    <isset property="msbuild.targets" />
  </condition>

  <condition property="msbuild.configuration" else="Release">
    <isset property="msbuild.configuration" />
  </condition>

  <condition property="msbuild.TreatWarningsAsErrors" else="true">
    <isset property="msbuild.TreatWarningsAsErrors" />
  </condition>

  <condition property="build.tools.msbuild.3.5" else="C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe">
    <isset property="build.tools.msbuild.3.5" />
  </condition>

  <condition property="build.tools.msbuild.4.0" else="C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe">
    <isset property="build.tools.msbuild.4.0" />
  </condition>

  <condition property="build.tools.nuget" value="nuget.exe">
    <or>
      <not>
        <isset property="build.tools.nuget" />
      </not>
      <not>
        <isset property="teamcity.dotnet.nuget" />
      </not>
    </or>
  </condition>

  <condition property="build.tools.xunit" else="xunit.console.clr4.exe">
    <isset property="build.tools.xunit" />
  </condition>

  <target name="print-properties">
    <echo message="msbuild.verbosity: ${msbuild.verbosity}" />
    <echo message="build.tools.nuget: ${build.tools.nuget}" />
  </target>

  <target name="open-targets" depends="print-properties,nuget-packages,compile,execute-unittests" />

  <target name='nuget-packages'>
    <antcall target='nuget'>
      <param name='package' value='RhinoMocks' />
      <param name='outputDirectory' value='packages' />
    </antcall>
    <antcall target='nuget'>
      <param name='package' value='xUnit' />
      <param name='outputDirectory' value='packages' />
    </antcall>
    <antcall target='nuget'>
      <param name='package' value='FluentAssertions' />
      <param name='outputDirectory' value='packages' />
    </antcall>
  </target>

  <!-- open-targets -->
  <target name="compile">
    <antcall target='msbuild'>
      <param name='solution' value='src\nModule.sln' />
    </antcall>
  </target>

  <target name="execute-unittests">
    <exec
      dir='.'
      executable='${build.tools.xunit}'
      failonerror='true'>
      <arg line='"src\nModule.UnitTests\bin\Release\nModule.UnitTests.dll"' />
    </exec>
  </target>

  <!-- Common Targets -->
  <target name='msbuild'>
    <condition property="target.msbuild.verbosity" else="${msbuild.verbosity}">
      <isset property="target.msbuild.verbosity" />
    </condition>
    <condition property="target.msbuild.warninglevel" else="${msbuild.warninglevel}">
      <isset property="target.msbuild.warninglevel" />
    </condition>
    <condition property="target.msbuild.definedconstants" else="">
      <isset property="target.msbuild.definedconstants" />
    </condition>
    <condition property="target.msbuild.targets" else="${msbuild.targets}">
      <isset property="target.msbuild.targets" />
    </condition>
    <condition property="target.msbuild.configuration" else="${msbuild.configuration}">
      <isset property="target.msbuild.configuration" />
    </condition>
    <condition property="target.msbuild.TreatWarningsAsErrors" else="${msbuild.TreatWarningsAsErrors}">
      <isset property="target.msbuild.TreatWarningsAsErrors" />
    </condition>

    <exec
      dir='.'
      executable='${build.tools.msbuild.4.0}'
      failonerror='true'>
      <arg line='"${solution}"' />
      <arg line='/p:Configuration=${target.msbuild.configuration}' />
      <arg line='/p:WarningLevel=${target.msbuild.warninglevel}' />
      <arg line='/p:TreatWarningsAsErrors=${target.msbuild.TreatWarningsAsErrors}' />
      <arg line='/p:DevEnvDir="c:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE"' />
      <arg line='/p:DefineConstants="${target.msbuild.definedconstants}"' />
      <arg line='/T:${target.msbuild.targets}' />
      <arg line='/verbosity:${target.msbuild.verbosity}' />
      <arg line='/nologo' />
    </exec>
  </target>

  <target name="nuget">
    <exec
      dir="."
      executable='${build.tools.nuget}'
      failonerror='true'>
      <arg line='install' />
      <arg line='${package}' />
      <arg line='-OutputDirectory' />
      <arg line='${outputDirectory}' />
      <arg line='-ExcludeVersion' />
    </exec>
  </target>

  <target name='properties'>
    <echo message='The following are properties that can be given to the ant call to provide customization' />
  </target>
</project>
